{"ast":null,"code":"var _jsxFileName = \"/home/onemorebottlee/Desktop/nomadCoder/Trello-Clone/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport { useRecoilState } from \"recoil\";\nimport styled from 'styled-components';\nimport { toDoState } from \"./atoms\";\nimport Board from \"./Componants/Board\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  display: flex;\n  max-width: 680px;\n  width: 100%;\n  margin: 0 auto;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`;\n_c = Wrapper;\nconst Boards = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  width: 100%;\n  gap: 10px;\n`;\n_c2 = Boards;\nfunction App() {\n  _s();\n  const [toDos, setToDos] = useRecoilState(toDoState);\n\n  // const onDragEnd = (info: DropResult) => {\n  //   console.log(info)\n  //   const { destination, draggableId, source } = info\n  //   if (!destination) return\n  //   if (destination?.droppableId === source.droppableId) {\n  //     // 같은 Board에서 움직일 때\n\n  //     setToDos((allBoards) => {\n  //       const boardCopy = [...allBoards[source.droppableId]]\n  //       // 지우기\n  //       boardCopy.splice(source.index, 1)\n  //       // 추가하기\n  //       boardCopy.splice(destination?.index, 0, draggableId)\n  //       return {\n  //         ...allBoards,\n  //         [source.droppableId]: boardCopy,\n  //       }\n  //     })\n  //   }\n  //   if (destination.droppableId !== source.droppableId) {\n  //     // 다른 Board에서 움직일 때\n  //     setToDos((allBoards) => {\n  //       const sourceBoard = [...allBoards[source.droppableId]]\n  //       const destinationBoard = [...allBoards[destination.droppableId]]\n  //       sourceBoard.splice(source.index, 1)\n  //       destinationBoard.splice(destination?.index, 0, draggableId)\n  //       return {\n  //         ...allBoards,\n  //         [source.droppableId]: sourceBoard,\n  //         [destination.droppableId]: destinationBoard\n  //       }\n  //     })\n  //   }\n  // }\n\n  const onDragEnd = _ref => {\n    let {\n      draggableId,\n      destination,\n      source\n    } = _ref;\n    if (!destination) return;\n    setToDos(allBoards => {\n      const copyToDos = {};\n      Object.keys(allBoards).forEach(toDosKey => {\n        copyToDos[toDosKey] = [...allBoards[toDosKey]];\n      });\n      copyToDos[source.droppableId].splice(source.index, 1);\n      copyToDos[destination.droppableId].splice(destination.index, 0, draggableId);\n      return copyToDos;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: /*#__PURE__*/_jsxDEV(Boards, {\n        children: Object.keys(toDos).map(boardId => /*#__PURE__*/_jsxDEV(Board, {\n          boardId: boardId,\n          toDos: toDos[boardId]\n        }, boardId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5a67h5XNEBDPty+W6+XWtUnHNYw=\", false, function () {\n  return [useRecoilState];\n});\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Boards\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["DragDropContext","useRecoilState","styled","toDoState","Board","Wrapper","div","Boards","App","toDos","setToDos","onDragEnd","draggableId","destination","source","allBoards","copyToDos","Object","keys","forEach","toDosKey","droppableId","splice","index","map","boardId"],"sources":["/home/onemorebottlee/Desktop/nomadCoder/Trello-Clone/src/App.tsx"],"sourcesContent":["import { DragDropContext, DropResult } from \"react-beautiful-dnd\";\nimport { useRecoilState } from \"recoil\";\nimport styled from 'styled-components';\nimport { toDoState } from \"./atoms\";\nimport Board from \"./Componants/Board\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  max-width: 680px;\n  width: 100%;\n  margin: 0 auto;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`\n\nconst Boards = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  width: 100%;\n  gap: 10px;\n`\n\nfunction App() {\n  const [toDos, setToDos] = useRecoilState(toDoState)\n\n  // const onDragEnd = (info: DropResult) => {\n  //   console.log(info)\n  //   const { destination, draggableId, source } = info\n  //   if (!destination) return\n  //   if (destination?.droppableId === source.droppableId) {\n  //     // 같은 Board에서 움직일 때\n\n  //     setToDos((allBoards) => {\n  //       const boardCopy = [...allBoards[source.droppableId]]\n  //       // 지우기\n  //       boardCopy.splice(source.index, 1)\n  //       // 추가하기\n  //       boardCopy.splice(destination?.index, 0, draggableId)\n  //       return {\n  //         ...allBoards,\n  //         [source.droppableId]: boardCopy,\n  //       }\n  //     })\n  //   }\n  //   if (destination.droppableId !== source.droppableId) {\n  //     // 다른 Board에서 움직일 때\n  //     setToDos((allBoards) => {\n  //       const sourceBoard = [...allBoards[source.droppableId]]\n  //       const destinationBoard = [...allBoards[destination.droppableId]]\n  //       sourceBoard.splice(source.index, 1)\n  //       destinationBoard.splice(destination?.index, 0, draggableId)\n  //       return {\n  //         ...allBoards,\n  //         [source.droppableId]: sourceBoard,\n  //         [destination.droppableId]: destinationBoard\n  //       }\n  //     })\n  //   }\n  // }\n\n  const onDragEnd = ({ draggableId, destination, source }: DropResult) => {\n    if (!destination) return;\n    setToDos((allBoards) => {\n      const copyToDos: IToDoState = {};\n      Object.keys(allBoards).forEach((toDosKey) => {\n        copyToDos[toDosKey] = [...allBoards[toDosKey]];\n      });\n      copyToDos[source.droppableId].splice(source.index, 1);\n      copyToDos[destination.droppableId].splice(destination.index, 0, draggableId);\n      return copyToDos;\n    });\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Wrapper>\n        <Boards>\n          {Object.keys(toDos).map((boardId) => (\n            <Board boardId={boardId} key={boardId} toDos={toDos[boardId]} />))}\n        </Boards>\n      </Wrapper>\n    </DragDropContext>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,eAAe,QAAoB,qBAAqB;AACjE,SAASC,cAAc,QAAQ,QAAQ;AACvC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,SAAS,QAAQ,SAAS;AACnC,OAAOC,KAAK,MAAM,oBAAoB;AAAC;AAEvC,MAAMC,OAAO,GAAGH,MAAM,CAACI,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAA,KARKD,OAAO;AAUb,MAAME,MAAM,GAAGL,MAAM,CAACI,GAAI;AAC1B;AACA;AACA;AACA;AACA,CAAC;AAAA,MALKC,MAAM;AAOZ,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,cAAc,CAACE,SAAS,CAAC;;EAEnD;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMQ,SAAS,GAAG,QAAsD;IAAA,IAArD;MAAEC,WAAW;MAAEC,WAAW;MAAEC;IAAmB,CAAC;IACjE,IAAI,CAACD,WAAW,EAAE;IAClBH,QAAQ,CAAEK,SAAS,IAAK;MACtB,MAAMC,SAAqB,GAAG,CAAC,CAAC;MAChCC,MAAM,CAACC,IAAI,CAACH,SAAS,CAAC,CAACI,OAAO,CAAEC,QAAQ,IAAK;QAC3CJ,SAAS,CAACI,QAAQ,CAAC,GAAG,CAAC,GAAGL,SAAS,CAACK,QAAQ,CAAC,CAAC;MAChD,CAAC,CAAC;MACFJ,SAAS,CAACF,MAAM,CAACO,WAAW,CAAC,CAACC,MAAM,CAACR,MAAM,CAACS,KAAK,EAAE,CAAC,CAAC;MACrDP,SAAS,CAACH,WAAW,CAACQ,WAAW,CAAC,CAACC,MAAM,CAACT,WAAW,CAACU,KAAK,EAAE,CAAC,EAAEX,WAAW,CAAC;MAC5E,OAAOI,SAAS;IAClB,CAAC,CAAC;EACJ,CAAC;EAED,oBACE,QAAC,eAAe;IAAC,SAAS,EAAEL,SAAU;IAAA,uBACpC,QAAC,OAAO;MAAA,uBACN,QAAC,MAAM;QAAA,UACJM,MAAM,CAACC,IAAI,CAACT,KAAK,CAAC,CAACe,GAAG,CAAEC,OAAO,iBAC9B,QAAC,KAAK;UAAC,OAAO,EAAEA,OAAQ;UAAe,KAAK,EAAEhB,KAAK,CAACgB,OAAO;QAAE,GAA/BA,OAAO;UAAA;UAAA;UAAA;QAAA,QAA4B;MAAC;QAAA;QAAA;QAAA;MAAA;IAC7D;MAAA;MAAA;MAAA;IAAA;EACD;IAAA;IAAA;IAAA;EAAA,QACM;AAEtB;AAAC,GA7DQjB,GAAG;EAAA,QACgBP,cAAc;AAAA;AAAA,MADjCO,GAAG;AA+DZ,eAAeA,GAAG;AAAC;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module"}