{"ast":null,"code":"var _jsxFileName = \"/home/onemorebottlee/Desktop/nomadCoder/Trello-Clone/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport { useRecoilState } from \"recoil\";\nimport styled from 'styled-components';\nimport { toDoState } from \"./atoms\";\nimport Board from \"./Componants/Board\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  display: flex;\n  max-width: 680px;\n  width: 100%;\n  margin: 0 auto;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`;\n_c = Wrapper;\nconst Boards = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  width: 100%;\n  gap: 10px;\n`;\n_c2 = Boards;\nfunction App() {\n  _s();\n  const [toDos, setToDos] = useRecoilState(toDoState);\n  const onDragEnd = info => {\n    console.log(info);\n    const {\n      destination,\n      draggableId,\n      source\n    } = info;\n    if ((destination === null || destination === void 0 ? void 0 : destination.droppableId) === source.droppableId) {\n      // 같은 Board에서 움직일 때\n\n      setToDos(allBoards => {\n        const boardCopy = [...allBoards[source.droppableId]];\n        // 지우기\n        boardCopy.splice(source.index, 1);\n        // 추가하기\n        boardCopy.splice(destination === null || destination === void 0 ? void 0 : destination.index, 0, draggableId);\n        return {\n          ...allBoards,\n          [source.droppableId]: boardCopy\n        };\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: /*#__PURE__*/_jsxDEV(Boards, {\n        children: Object.keys(toDos).map(boardId => /*#__PURE__*/_jsxDEV(Board, {\n          boardId: boardId,\n          toDos: toDos[boardId]\n        }, boardId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5a67h5XNEBDPty+W6+XWtUnHNYw=\", false, function () {\n  return [useRecoilState];\n});\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Boards\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["DragDropContext","useRecoilState","styled","toDoState","Board","Wrapper","div","Boards","App","toDos","setToDos","onDragEnd","info","console","log","destination","draggableId","source","droppableId","allBoards","boardCopy","splice","index","Object","keys","map","boardId"],"sources":["/home/onemorebottlee/Desktop/nomadCoder/Trello-Clone/src/App.tsx"],"sourcesContent":["import { DragDropContext, DropResult } from \"react-beautiful-dnd\";\nimport { useRecoilState } from \"recoil\";\nimport styled from 'styled-components';\nimport { toDoState } from \"./atoms\";\nimport Board from \"./Componants/Board\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  max-width: 680px;\n  width: 100%;\n  margin: 0 auto;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`\n\nconst Boards = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  width: 100%;\n  gap: 10px;\n`\n\nfunction App() {\n  const [toDos, setToDos] = useRecoilState(toDoState)\n\n  const onDragEnd = (info:DropResult) => {\n    console.log(info)\n    const {destination, draggableId, source} = info\n    if(destination?.droppableId === source.droppableId){\n      // 같은 Board에서 움직일 때\n      \n      setToDos((allBoards) => {\n        const boardCopy = [...allBoards[source.droppableId]]\n        // 지우기\n        boardCopy.splice(source.index, 1)\n        // 추가하기\n        boardCopy.splice(destination?.index, 0, draggableId)\n        return {\n          ...allBoards,\n          [source.droppableId]: boardCopy\n        }\n      })\n    }\n\n    \n  }\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Wrapper>\n        <Boards>\n          {Object.keys(toDos).map((boardId) => (\n            <Board boardId={boardId} key={boardId} toDos={toDos[boardId]} />))}\n        </Boards>\n      </Wrapper>\n    </DragDropContext>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,eAAe,QAAoB,qBAAqB;AACjE,SAASC,cAAc,QAAQ,QAAQ;AACvC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,SAAS,QAAQ,SAAS;AACnC,OAAOC,KAAK,MAAM,oBAAoB;AAAC;AAEvC,MAAMC,OAAO,GAAGH,MAAM,CAACI,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAA,KARKD,OAAO;AAUb,MAAME,MAAM,GAAGL,MAAM,CAACI,GAAI;AAC1B;AACA;AACA;AACA;AACA,CAAC;AAAA,MALKC,MAAM;AAOZ,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,cAAc,CAACE,SAAS,CAAC;EAEnD,MAAMQ,SAAS,GAAIC,IAAe,IAAK;IACrCC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjB,MAAM;MAACG,WAAW;MAAEC,WAAW;MAAEC;IAAM,CAAC,GAAGL,IAAI;IAC/C,IAAG,CAAAG,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEG,WAAW,MAAKD,MAAM,CAACC,WAAW,EAAC;MACjD;;MAEAR,QAAQ,CAAES,SAAS,IAAK;QACtB,MAAMC,SAAS,GAAG,CAAC,GAAGD,SAAS,CAACF,MAAM,CAACC,WAAW,CAAC,CAAC;QACpD;QACAE,SAAS,CAACC,MAAM,CAACJ,MAAM,CAACK,KAAK,EAAE,CAAC,CAAC;QACjC;QACAF,SAAS,CAACC,MAAM,CAACN,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEO,KAAK,EAAE,CAAC,EAAEN,WAAW,CAAC;QACpD,OAAO;UACL,GAAGG,SAAS;UACZ,CAACF,MAAM,CAACC,WAAW,GAAGE;QACxB,CAAC;MACH,CAAC,CAAC;IACJ;EAGF,CAAC;EAED,oBACE,QAAC,eAAe;IAAC,SAAS,EAAET,SAAU;IAAA,uBACpC,QAAC,OAAO;MAAA,uBACN,QAAC,MAAM;QAAA,UACJY,MAAM,CAACC,IAAI,CAACf,KAAK,CAAC,CAACgB,GAAG,CAAEC,OAAO,iBAC9B,QAAC,KAAK;UAAC,OAAO,EAAEA,OAAQ;UAAe,KAAK,EAAEjB,KAAK,CAACiB,OAAO;QAAE,GAA/BA,OAAO;UAAA;UAAA;UAAA;QAAA,QAA4B;MAAC;QAAA;QAAA;QAAA;MAAA;IAC7D;MAAA;MAAA;MAAA;IAAA;EACD;IAAA;IAAA;IAAA;EAAA,QACM;AAEtB;AAAC,GAnCQlB,GAAG;EAAA,QACgBP,cAAc;AAAA;AAAA,MADjCO,GAAG;AAqCZ,eAAeA,GAAG;AAAC;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module"}